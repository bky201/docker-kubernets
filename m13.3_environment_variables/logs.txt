
==> Audit <==
|-----------|-----------------|----------|------|---------|----------------------|----------------------|
|  Command  |      Args       | Profile  | User | Version |      Start Time      |       End Time       |
|-----------|-----------------|----------|------|---------|----------------------|----------------------|
| start     |                 | minikube | bky  | v1.33.1 | 23 Jul 24 23:49 CEST | 23 Jul 24 23:56 CEST |
| dashboard |                 | minikube | bky  | v1.33.1 | 24 Jul 24 00:01 CEST |                      |
| start     |                 | minikube | bky  | v1.33.1 | 24 Jul 24 00:10 CEST | 24 Jul 24 00:11 CEST |
| kubectl   | -- get po -A    | minikube | bky  | v1.33.1 | 24 Jul 24 00:11 CEST | 24 Jul 24 00:11 CEST |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 24 Jul 24 00:30 CEST | 24 Jul 24 00:31 CEST |
| dashboard |                 | minikube | bky  | v1.33.1 | 24 Jul 24 00:59 CEST |                      |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 24 Jul 24 14:39 CEST | 24 Jul 24 14:40 CEST |
| dashboard |                 | minikube | bky  | v1.33.1 | 24 Jul 24 14:40 CEST |                      |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 14:57 CEST | 24 Jul 24 15:02 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 15:03 CEST | 24 Jul 24 15:15 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 15:15 CEST | 24 Jul 24 15:16 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 15:16 CEST | 24 Jul 24 15:17 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 15:17 CEST | 24 Jul 24 15:18 CEST |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 24 Jul 24 15:23 CEST | 24 Jul 24 15:23 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 15:24 CEST | 24 Jul 24 15:31 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 15:31 CEST | 24 Jul 24 15:37 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 15:37 CEST | 24 Jul 24 15:40 CEST |
| start     |                 | minikube | bky  | v1.33.1 | 24 Jul 24 15:40 CEST | 24 Jul 24 15:41 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 15:41 CEST | 24 Jul 24 15:47 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 15:47 CEST | 24 Jul 24 16:47 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 16:47 CEST |                      |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 24 Jul 24 16:53 CEST | 24 Jul 24 16:53 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 16:54 CEST | 24 Jul 24 18:39 CEST |
| dashboard |                 | minikube | bky  | v1.33.1 | 24 Jul 24 17:29 CEST |                      |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 18:39 CEST | 24 Jul 24 18:45 CEST |
| service   | first-app       | minikube | bky  | v1.33.1 | 24 Jul 24 18:45 CEST | 24 Jul 24 19:08 CEST |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 24 Jul 24 20:15 CEST | 24 Jul 24 20:16 CEST |
| service   | backend         | minikube | bky  | v1.33.1 | 24 Jul 24 21:00 CEST | 24 Jul 24 21:23 CEST |
| service   | backend         | minikube | bky  | v1.33.1 | 24 Jul 24 21:24 CEST |                      |
| service   | backend         | minikube | bky  | v1.33.1 | 24 Jul 24 21:27 CEST | 24 Jul 24 21:47 CEST |
| service   | stort-service   | minikube | bky  | v1.33.1 | 24 Jul 24 23:47 CEST | 24 Jul 24 23:49 CEST |
| service   | stort-service   | minikube | bky  | v1.33.1 | 24 Jul 24 23:49 CEST | 24 Jul 24 23:50 CEST |
| service   | story-service   | minikube | bky  | v1.33.1 | 24 Jul 24 23:50 CEST |                      |
| service   | story-service   | minikube | bky  | v1.33.1 | 24 Jul 24 23:51 CEST | 24 Jul 24 23:54 CEST |
| service   | story-service   | minikube | bky  | v1.33.1 | 24 Jul 24 23:56 CEST | 25 Jul 24 00:06 CEST |
| dashboard |                 | minikube | bky  | v1.33.1 | 25 Jul 24 00:01 CEST |                      |
| service   | story-service   | minikube | bky  | v1.33.1 | 25 Jul 24 00:14 CEST | 25 Jul 24 00:45 CEST |
| service   | story-service   | minikube | bky  | v1.33.1 | 25 Jul 24 00:59 CEST |                      |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 25 Jul 24 17:34 CEST |                      |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 25 Jul 24 17:40 CEST |                      |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 25 Jul 24 17:45 CEST |                      |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 25 Jul 24 17:50 CEST |                      |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 25 Jul 24 17:55 CEST |                      |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 25 Jul 24 18:00 CEST |                      |
| stop      |                 | minikube | bky  | v1.33.1 | 25 Jul 24 18:25 CEST | 25 Jul 24 18:25 CEST |
| delete    |                 | minikube | bky  | v1.33.1 | 25 Jul 24 18:25 CEST | 25 Jul 24 18:25 CEST |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 25 Jul 24 18:25 CEST | 25 Jul 24 18:26 CEST |
| service   | story-service   | minikube | bky  | v1.33.1 | 25 Jul 24 18:43 CEST | 25 Jul 24 22:28 CEST |
| service   | story-service   | minikube | bky  | v1.33.1 | 25 Jul 24 22:25 CEST |                      |
| stop      |                 | minikube | bky  | v1.33.1 | 25 Jul 24 22:27 CEST | 25 Jul 24 22:27 CEST |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 25 Jul 24 22:29 CEST | 25 Jul 24 22:29 CEST |
| service   | story-service   | minikube | bky  | v1.33.1 | 25 Jul 24 22:29 CEST |                      |
| stop      |                 | minikube | bky  | v1.33.1 | 25 Jul 24 22:35 CEST | 25 Jul 24 22:35 CEST |
| delete    |                 | minikube | bky  | v1.33.1 | 25 Jul 24 22:35 CEST | 25 Jul 24 22:35 CEST |
| start     | --driver=docker | minikube | bky  | v1.33.1 | 25 Jul 24 22:36 CEST | 25 Jul 24 22:36 CEST |
| service   | story-service   | minikube | bky  | v1.33.1 | 25 Jul 24 22:39 CEST |                      |
|-----------|-----------------|----------|------|---------|----------------------|----------------------|


==> Last Start <==
Log file created at: 2024/07/25 22:36:08
Running on machine: bkd
Binary: Built with gc go1.22.1 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0725 22:36:08.426349   28961 out.go:291] Setting OutFile to fd 1 ...
I0725 22:36:08.426722   28961 out.go:343] isatty.IsTerminal(1) = true
I0725 22:36:08.426733   28961 out.go:304] Setting ErrFile to fd 2...
I0725 22:36:08.426749   28961 out.go:343] isatty.IsTerminal(2) = true
I0725 22:36:08.427335   28961 root.go:338] Updating PATH: /home/bky/.minikube/bin
I0725 22:36:08.428519   28961 out.go:298] Setting JSON to false
I0725 22:36:08.431140   28961 start.go:129] hostinfo: {"hostname":"bkd","uptime":36443,"bootTime":1721903326,"procs":276,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"22.04","kernelVersion":"6.5.0-44-generic","kernelArch":"x86_64","virtualizationSystem":"kvm","virtualizationRole":"host","hostId":"28242c65-ffe5-4b96-963a-19f48539483c"}
I0725 22:36:08.431283   28961 start.go:139] virtualization: kvm host
I0725 22:36:08.438370   28961 out.go:177] 😄  minikube v1.33.1 on Ubuntu 22.04
I0725 22:36:08.439969   28961 notify.go:220] Checking for updates...
I0725 22:36:08.440378   28961 driver.go:392] Setting default libvirt URI to qemu:///system
I0725 22:36:08.502734   28961 docker.go:122] docker version: linux-27.0.3:Docker Desktop 4.32.0 (157355)
I0725 22:36:08.502953   28961 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0725 22:36:08.722545   28961 info.go:266] docker info: {ID:f6a8bdca-55c3-482d-8b1d-ab3697469fa4 Containers:1 ContainersRunning:1 ContainersPaused:0 ContainersStopped:0 Images:34 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:60 OomKillDisable:false NGoroutines:81 SystemTime:2024-07-25 20:36:08.700693796 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:12 KernelVersion:6.6.32-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:3980357632 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=unix:///home/bky/.docker/desktop/docker-cli.sock] ExperimentalBuild:false ServerVersion:27.0.3 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:ae71819c4f5e67bb4d5ae76a6b735f29cc25774e Expected:ae71819c4f5e67bb4d5ae76a6b735f29cc25774e} RuncCommit:{ID:v1.1.13-0-g58aa920 Expected:v1.1.13-0-g58aa920} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-buildx] ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.15.1-desktop.1] map[Name:compose Path:/usr/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-compose] ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.28.1-desktop.1] map[Name:debug Path:/usr/lib/docker/cli-plugins/docker-debug SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.32] map[Name:desktop Path:/usr/lib/docker/cli-plugins/docker-desktop SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands (Alpha) Vendor:Docker Inc. Version:v0.0.14] map[Name:dev Path:/usr/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:/usr/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.25] map[Name:feedback Path:/usr/lib/docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.5] map[Name:init Path:/usr/lib/docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.3.0] map[Name:sbom Path:/usr/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:/usr/lib/docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.10.0]] Warnings:<nil>}}
I0725 22:36:08.722779   28961 docker.go:295] overlay module found
I0725 22:36:08.724568   28961 out.go:177] ✨  Using the docker driver based on user configuration
I0725 22:36:08.725758   28961 start.go:297] selected driver: docker
I0725 22:36:08.725765   28961 start.go:901] validating driver "docker" against <nil>
I0725 22:36:08.725779   28961 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0725 22:36:08.725904   28961 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0725 22:36:09.051807   28961 info.go:266] docker info: {ID:f6a8bdca-55c3-482d-8b1d-ab3697469fa4 Containers:1 ContainersRunning:1 ContainersPaused:0 ContainersStopped:0 Images:34 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:60 OomKillDisable:false NGoroutines:81 SystemTime:2024-07-25 20:36:09.001183647 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:12 KernelVersion:6.6.32-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:3980357632 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=unix:///home/bky/.docker/desktop/docker-cli.sock] ExperimentalBuild:false ServerVersion:27.0.3 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:ae71819c4f5e67bb4d5ae76a6b735f29cc25774e Expected:ae71819c4f5e67bb4d5ae76a6b735f29cc25774e} RuncCommit:{ID:v1.1.13-0-g58aa920 Expected:v1.1.13-0-g58aa920} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-buildx] ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.15.1-desktop.1] map[Name:compose Path:/usr/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-compose] ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.28.1-desktop.1] map[Name:debug Path:/usr/lib/docker/cli-plugins/docker-debug SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.32] map[Name:desktop Path:/usr/lib/docker/cli-plugins/docker-desktop SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands (Alpha) Vendor:Docker Inc. Version:v0.0.14] map[Name:dev Path:/usr/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:/usr/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.25] map[Name:feedback Path:/usr/lib/docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.5] map[Name:init Path:/usr/lib/docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.3.0] map[Name:sbom Path:/usr/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:/usr/lib/docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.10.0]] Warnings:<nil>}}
I0725 22:36:09.052309   28961 start_flags.go:310] no existing cluster config was found, will generate one from the flags 
I0725 22:36:09.053464   28961 start_flags.go:393] Using suggested 3747MB memory alloc based on sys=15910MB, container=3795MB
I0725 22:36:09.053836   28961 start_flags.go:929] Wait components to verify : map[apiserver:true system_pods:true]
I0725 22:36:09.060698   28961 out.go:177] 📌  Using Docker driver with root privileges
W0725 22:36:09.062034   28961 out.go:239] ❗  For an improved experience it's recommended to use Docker Engine instead of Docker Desktop.
Docker Engine installation instructions: https://docs.docker.com/engine/install/#server
I0725 22:36:09.062109   28961 cni.go:84] Creating CNI manager for ""
I0725 22:36:09.062143   28961 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0725 22:36:09.062181   28961 start_flags.go:319] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0725 22:36:09.062359   28961 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:3747 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/bky:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0725 22:36:09.064963   28961 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0725 22:36:09.066365   28961 cache.go:121] Beginning downloading kic base image for docker with docker
I0725 22:36:09.067885   28961 out.go:177] 🚜  Pulling base image v0.0.44 ...
I0725 22:36:09.070200   28961 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0725 22:36:09.070274   28961 preload.go:147] Found local preload: /home/bky/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4
I0725 22:36:09.070290   28961 cache.go:56] Caching tarball of preloaded images
I0725 22:36:09.070315   28961 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local docker daemon
I0725 22:36:09.070458   28961 preload.go:173] Found /home/bky/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0725 22:36:09.070482   28961 cache.go:59] Finished verifying existence of preloaded tar for v1.30.0 on docker
I0725 22:36:09.071310   28961 profile.go:143] Saving config to /home/bky/.minikube/profiles/minikube/config.json ...
I0725 22:36:09.071364   28961 lock.go:35] WriteFile acquiring /home/bky/.minikube/profiles/minikube/config.json: {Name:mk08fc4a70f8021b60cc527c7c166e9db287f894 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0725 22:36:09.137935   28961 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local docker daemon, skipping pull
I0725 22:36:09.137957   28961 cache.go:144] gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e exists in daemon, skipping load
I0725 22:36:09.137990   28961 cache.go:194] Successfully downloaded all kic artifacts
I0725 22:36:09.138046   28961 start.go:360] acquireMachinesLock for minikube: {Name:mkd1968feb17f0b46afc02497238d8873f544755 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0725 22:36:09.138148   28961 start.go:364] duration metric: took 74.465µs to acquireMachinesLock for "minikube"
I0725 22:36:09.138173   28961 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:3747 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/bky:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0725 22:36:09.138316   28961 start.go:125] createHost starting for "" (driver="docker")
I0725 22:36:09.145217   28961 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=3747MB) ...
I0725 22:36:09.145858   28961 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0725 22:36:09.145915   28961 client.go:168] LocalClient.Create starting
I0725 22:36:09.146051   28961 main.go:141] libmachine: Reading certificate data from /home/bky/.minikube/certs/ca.pem
I0725 22:36:09.146162   28961 main.go:141] libmachine: Decoding PEM data...
I0725 22:36:09.146207   28961 main.go:141] libmachine: Parsing certificate...
I0725 22:36:09.146307   28961 main.go:141] libmachine: Reading certificate data from /home/bky/.minikube/certs/cert.pem
I0725 22:36:09.146352   28961 main.go:141] libmachine: Decoding PEM data...
I0725 22:36:09.146374   28961 main.go:141] libmachine: Parsing certificate...
I0725 22:36:09.147038   28961 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0725 22:36:09.194595   28961 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0725 22:36:09.194708   28961 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0725 22:36:09.194727   28961 cli_runner.go:164] Run: docker network inspect minikube
W0725 22:36:09.238892   28961 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0725 22:36:09.238925   28961 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0725 22:36:09.238969   28961 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0725 22:36:09.239103   28961 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0725 22:36:09.279659   28961 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc0017921b0}
I0725 22:36:09.279709   28961 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0725 22:36:09.279789   28961 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0725 22:36:09.422942   28961 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0725 22:36:09.422972   28961 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0725 22:36:09.423091   28961 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0725 22:36:09.465480   28961 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0725 22:36:09.570007   28961 oci.go:103] Successfully created a docker volume minikube
I0725 22:36:09.570154   28961 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -d /var/lib
I0725 22:36:10.934969   28961 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -d /var/lib: (1.364765739s)
I0725 22:36:10.935010   28961 oci.go:107] Successfully prepared a docker volume minikube
I0725 22:36:10.935080   28961 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0725 22:36:10.935105   28961 kic.go:194] Starting extracting preloaded images to volume ...
I0725 22:36:10.935214   28961 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /home/bky/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -I lz4 -xf /preloaded.tar -C /extractDir
I0725 22:36:18.804216   28961 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /home/bky/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -I lz4 -xf /preloaded.tar -C /extractDir: (7.868893637s)
I0725 22:36:18.804285   28961 kic.go:203] duration metric: took 7.869167965s to extract preloaded images to volume ...
W0725 22:36:18.804682   28961 cgroups_linux.go:77] Your kernel does not support swap limit capabilities or the cgroup is not mounted.
W0725 22:36:18.804795   28961 oci.go:243] Your kernel does not support CPU cfs period/quota or the cgroup is not mounted.
I0725 22:36:18.804892   28961 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0725 22:36:19.173070   28961 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=3747mb -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e
I0725 22:36:20.330570   28961 cli_runner.go:217] Completed: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=3747mb -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e: (1.157407759s)
I0725 22:36:20.330740   28961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0725 22:36:20.441088   28961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0725 22:36:20.534030   28961 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0725 22:36:20.741014   28961 oci.go:144] the created container "minikube" has a running status.
I0725 22:36:20.741046   28961 kic.go:225] Creating ssh key for kic: /home/bky/.minikube/machines/minikube/id_rsa...
I0725 22:36:21.661534   28961 kic_runner.go:191] docker (temp): /home/bky/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0725 22:36:21.764849   28961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0725 22:36:21.865215   28961 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0725 22:36:21.865239   28961 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0725 22:36:22.112581   28961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0725 22:36:22.185237   28961 machine.go:94] provisionDockerMachine start ...
I0725 22:36:22.185419   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:22.257890   28961 main.go:141] libmachine: Using SSH client type: native
I0725 22:36:22.258454   28961 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 41651 <nil> <nil>}
I0725 22:36:22.258479   28961 main.go:141] libmachine: About to run SSH command:
hostname
I0725 22:36:22.509705   28961 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0725 22:36:22.509730   28961 ubuntu.go:169] provisioning hostname "minikube"
I0725 22:36:22.509852   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:22.557093   28961 main.go:141] libmachine: Using SSH client type: native
I0725 22:36:22.557520   28961 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 41651 <nil> <nil>}
I0725 22:36:22.557536   28961 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0725 22:36:22.798972   28961 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0725 22:36:22.799095   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:22.841737   28961 main.go:141] libmachine: Using SSH client type: native
I0725 22:36:22.842099   28961 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 41651 <nil> <nil>}
I0725 22:36:22.842125   28961 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0725 22:36:23.032613   28961 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0725 22:36:23.032637   28961 ubuntu.go:175] set auth options {CertDir:/home/bky/.minikube CaCertPath:/home/bky/.minikube/certs/ca.pem CaPrivateKeyPath:/home/bky/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/bky/.minikube/machines/server.pem ServerKeyPath:/home/bky/.minikube/machines/server-key.pem ClientKeyPath:/home/bky/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/bky/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/bky/.minikube}
I0725 22:36:23.032676   28961 ubuntu.go:177] setting up certificates
I0725 22:36:23.032689   28961 provision.go:84] configureAuth start
I0725 22:36:23.032778   28961 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0725 22:36:23.072079   28961 provision.go:143] copyHostCerts
I0725 22:36:23.072189   28961 exec_runner.go:144] found /home/bky/.minikube/ca.pem, removing ...
I0725 22:36:23.072203   28961 exec_runner.go:203] rm: /home/bky/.minikube/ca.pem
I0725 22:36:23.072337   28961 exec_runner.go:151] cp: /home/bky/.minikube/certs/ca.pem --> /home/bky/.minikube/ca.pem (1070 bytes)
I0725 22:36:23.072577   28961 exec_runner.go:144] found /home/bky/.minikube/cert.pem, removing ...
I0725 22:36:23.072587   28961 exec_runner.go:203] rm: /home/bky/.minikube/cert.pem
I0725 22:36:23.072668   28961 exec_runner.go:151] cp: /home/bky/.minikube/certs/cert.pem --> /home/bky/.minikube/cert.pem (1115 bytes)
I0725 22:36:23.072849   28961 exec_runner.go:144] found /home/bky/.minikube/key.pem, removing ...
I0725 22:36:23.072859   28961 exec_runner.go:203] rm: /home/bky/.minikube/key.pem
I0725 22:36:23.072938   28961 exec_runner.go:151] cp: /home/bky/.minikube/certs/key.pem --> /home/bky/.minikube/key.pem (1675 bytes)
I0725 22:36:23.073093   28961 provision.go:117] generating server cert: /home/bky/.minikube/machines/server.pem ca-key=/home/bky/.minikube/certs/ca.pem private-key=/home/bky/.minikube/certs/ca-key.pem org=bky.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0725 22:36:23.350795   28961 provision.go:177] copyRemoteCerts
I0725 22:36:23.350864   28961 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0725 22:36:23.350922   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:23.401393   28961 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:41651 SSHKeyPath:/home/bky/.minikube/machines/minikube/id_rsa Username:docker}
I0725 22:36:23.534953   28961 ssh_runner.go:362] scp /home/bky/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1070 bytes)
I0725 22:36:23.590154   28961 ssh_runner.go:362] scp /home/bky/.minikube/machines/server.pem --> /etc/docker/server.pem (1172 bytes)
I0725 22:36:23.642896   28961 ssh_runner.go:362] scp /home/bky/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0725 22:36:23.698042   28961 provision.go:87] duration metric: took 665.334982ms to configureAuth
I0725 22:36:23.698068   28961 ubuntu.go:193] setting minikube options for container-runtime
I0725 22:36:23.698489   28961 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0725 22:36:23.698601   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:23.735691   28961 main.go:141] libmachine: Using SSH client type: native
I0725 22:36:23.736105   28961 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 41651 <nil> <nil>}
I0725 22:36:23.736126   28961 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0725 22:36:23.921394   28961 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0725 22:36:23.921424   28961 ubuntu.go:71] root file system type: overlay
I0725 22:36:23.921691   28961 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0725 22:36:23.921809   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:23.958691   28961 main.go:141] libmachine: Using SSH client type: native
I0725 22:36:23.958984   28961 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 41651 <nil> <nil>}
I0725 22:36:23.959100   28961 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0725 22:36:24.172940   28961 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0725 22:36:24.173074   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:24.216479   28961 main.go:141] libmachine: Using SSH client type: native
I0725 22:36:24.217112   28961 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 41651 <nil> <nil>}
I0725 22:36:24.217158   28961 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0725 22:36:25.593556   28961 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2024-04-30 11:46:26.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2024-07-25 20:36:24.167769000 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0725 22:36:25.593662   28961 machine.go:97] duration metric: took 3.408404801s to provisionDockerMachine
I0725 22:36:25.593685   28961 client.go:171] duration metric: took 16.447761231s to LocalClient.Create
I0725 22:36:25.593722   28961 start.go:167] duration metric: took 16.447876177s to libmachine.API.Create "minikube"
I0725 22:36:25.593737   28961 start.go:293] postStartSetup for "minikube" (driver="docker")
I0725 22:36:25.593757   28961 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0725 22:36:25.593872   28961 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0725 22:36:25.593958   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:25.635977   28961 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:41651 SSHKeyPath:/home/bky/.minikube/machines/minikube/id_rsa Username:docker}
I0725 22:36:25.763053   28961 ssh_runner.go:195] Run: cat /etc/os-release
I0725 22:36:25.770875   28961 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0725 22:36:25.770911   28961 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0725 22:36:25.770940   28961 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0725 22:36:25.770948   28961 info.go:137] Remote host: Ubuntu 22.04.4 LTS
I0725 22:36:25.770960   28961 filesync.go:126] Scanning /home/bky/.minikube/addons for local assets ...
I0725 22:36:25.771076   28961 filesync.go:126] Scanning /home/bky/.minikube/files for local assets ...
I0725 22:36:25.771122   28961 start.go:296] duration metric: took 177.377207ms for postStartSetup
I0725 22:36:25.771623   28961 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0725 22:36:25.810261   28961 profile.go:143] Saving config to /home/bky/.minikube/profiles/minikube/config.json ...
I0725 22:36:25.810800   28961 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0725 22:36:25.810855   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:25.846986   28961 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:41651 SSHKeyPath:/home/bky/.minikube/machines/minikube/id_rsa Username:docker}
I0725 22:36:25.965655   28961 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0725 22:36:25.975751   28961 start.go:128] duration metric: took 16.837410045s to createHost
I0725 22:36:25.975775   28961 start.go:83] releasing machines lock for "minikube", held for 16.837614738s
I0725 22:36:25.975883   28961 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0725 22:36:26.044997   28961 ssh_runner.go:195] Run: cat /version.json
I0725 22:36:26.045106   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:26.045604   28961 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0725 22:36:26.045732   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:26.157700   28961 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:41651 SSHKeyPath:/home/bky/.minikube/machines/minikube/id_rsa Username:docker}
I0725 22:36:26.176771   28961 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:41651 SSHKeyPath:/home/bky/.minikube/machines/minikube/id_rsa Username:docker}
I0725 22:36:26.348677   28961 ssh_runner.go:195] Run: systemctl --version
I0725 22:36:26.644116   28961 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0725 22:36:26.654284   28961 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0725 22:36:26.724851   28961 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0725 22:36:26.724981   28961 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0725 22:36:26.792071   28961 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist, /etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I0725 22:36:26.792096   28961 start.go:494] detecting cgroup driver to use...
I0725 22:36:26.792146   28961 detect.go:199] detected "systemd" cgroup driver on host os
I0725 22:36:26.792328   28961 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0725 22:36:26.832212   28961 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0725 22:36:26.854197   28961 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0725 22:36:26.877054   28961 containerd.go:146] configuring containerd to use "systemd" as cgroup driver...
I0725 22:36:26.877168   28961 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = true|g' /etc/containerd/config.toml"
I0725 22:36:26.901700   28961 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0725 22:36:26.926662   28961 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0725 22:36:26.948890   28961 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0725 22:36:26.970993   28961 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0725 22:36:26.992082   28961 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0725 22:36:27.017555   28961 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0725 22:36:27.039976   28961 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0725 22:36:27.063438   28961 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0725 22:36:27.082480   28961 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0725 22:36:27.105875   28961 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0725 22:36:27.267427   28961 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0725 22:36:27.413502   28961 start.go:494] detecting cgroup driver to use...
I0725 22:36:27.413558   28961 detect.go:199] detected "systemd" cgroup driver on host os
I0725 22:36:27.413650   28961 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0725 22:36:27.453425   28961 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0725 22:36:27.453542   28961 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0725 22:36:27.486422   28961 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0725 22:36:27.542014   28961 ssh_runner.go:195] Run: which cri-dockerd
I0725 22:36:27.552062   28961 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0725 22:36:27.577755   28961 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0725 22:36:27.631306   28961 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0725 22:36:27.850013   28961 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0725 22:36:28.048214   28961 docker.go:574] configuring docker to use "systemd" as cgroup driver...
I0725 22:36:28.048417   28961 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (129 bytes)
I0725 22:36:28.089260   28961 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0725 22:36:28.244335   28961 ssh_runner.go:195] Run: sudo systemctl restart docker
I0725 22:36:28.789623   28961 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0725 22:36:28.818578   28961 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0725 22:36:28.846522   28961 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0725 22:36:29.013452   28961 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0725 22:36:29.177294   28961 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0725 22:36:29.336597   28961 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0725 22:36:29.374390   28961 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0725 22:36:29.398212   28961 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0725 22:36:29.578290   28961 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0725 22:36:29.722482   28961 start.go:541] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0725 22:36:29.722618   28961 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0725 22:36:29.737161   28961 start.go:562] Will wait 60s for crictl version
I0725 22:36:29.737283   28961 ssh_runner.go:195] Run: which crictl
I0725 22:36:29.746458   28961 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0725 22:36:29.816169   28961 start.go:578] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  26.1.1
RuntimeApiVersion:  v1
I0725 22:36:29.816266   28961 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0725 22:36:29.864923   28961 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0725 22:36:29.912420   28961 out.go:204] 🐳  Preparing Kubernetes v1.30.0 on Docker 26.1.1 ...
I0725 22:36:29.912625   28961 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0725 22:36:29.959054   28961 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0725 22:36:29.975103   28961 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0725 22:36:30.009429   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0725 22:36:30.052255   28961 kubeadm.go:877] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:3747 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/bky:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0725 22:36:30.052398   28961 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0725 22:36:30.052516   28961 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0725 22:36:30.086980   28961 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0725 22:36:30.087001   28961 docker.go:615] Images already preloaded, skipping extraction
I0725 22:36:30.087118   28961 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0725 22:36:30.126912   28961 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0725 22:36:30.126935   28961 cache_images.go:84] Images are preloaded, skipping loading
I0725 22:36:30.126969   28961 kubeadm.go:928] updating node { 192.168.49.2 8443 v1.30.0 docker true true} ...
I0725 22:36:30.127176   28961 kubeadm.go:940] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.30.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0725 22:36:30.127371   28961 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0725 22:36:30.218413   28961 cni.go:84] Creating CNI manager for ""
I0725 22:36:30.218444   28961 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0725 22:36:30.218463   28961 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0725 22:36:30.218497   28961 kubeadm.go:181] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.30.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:systemd ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0725 22:36:30.218783   28961 kubeadm.go:187] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.30.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: systemd
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0725 22:36:30.218896   28961 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.30.0
I0725 22:36:30.243584   28961 binaries.go:44] Found k8s binaries, skipping transfer
I0725 22:36:30.243697   28961 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0725 22:36:30.264426   28961 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0725 22:36:30.302646   28961 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0725 22:36:30.345460   28961 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2149 bytes)
I0725 22:36:30.385123   28961 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0725 22:36:30.395271   28961 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0725 22:36:30.431433   28961 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0725 22:36:30.599787   28961 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0725 22:36:30.644519   28961 certs.go:68] Setting up /home/bky/.minikube/profiles/minikube for IP: 192.168.49.2
I0725 22:36:30.644535   28961 certs.go:194] generating shared ca certs ...
I0725 22:36:30.644565   28961 certs.go:226] acquiring lock for ca certs: {Name:mk7529473e5a4418c6533473d3112d195f657764 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0725 22:36:30.644859   28961 certs.go:235] skipping valid "minikubeCA" ca cert: /home/bky/.minikube/ca.key
I0725 22:36:30.644994   28961 certs.go:235] skipping valid "proxyClientCA" ca cert: /home/bky/.minikube/proxy-client-ca.key
I0725 22:36:30.645015   28961 certs.go:256] generating profile certs ...
I0725 22:36:30.645142   28961 certs.go:363] generating signed profile cert for "minikube-user": /home/bky/.minikube/profiles/minikube/client.key
I0725 22:36:30.645175   28961 crypto.go:68] Generating cert /home/bky/.minikube/profiles/minikube/client.crt with IP's: []
I0725 22:36:31.032739   28961 crypto.go:156] Writing cert to /home/bky/.minikube/profiles/minikube/client.crt ...
I0725 22:36:31.032760   28961 lock.go:35] WriteFile acquiring /home/bky/.minikube/profiles/minikube/client.crt: {Name:mkea86374957f77cf76d83817d1f2db4865990b1 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0725 22:36:31.032976   28961 crypto.go:164] Writing key to /home/bky/.minikube/profiles/minikube/client.key ...
I0725 22:36:31.032987   28961 lock.go:35] WriteFile acquiring /home/bky/.minikube/profiles/minikube/client.key: {Name:mk473b503f38f6a5e3d5ddff90e2cab9bc45a801 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0725 22:36:31.033140   28961 certs.go:363] generating signed profile cert for "minikube": /home/bky/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I0725 22:36:31.033162   28961 crypto.go:68] Generating cert /home/bky/.minikube/profiles/minikube/apiserver.crt.7fb57e3c with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I0725 22:36:31.802515   28961 crypto.go:156] Writing cert to /home/bky/.minikube/profiles/minikube/apiserver.crt.7fb57e3c ...
I0725 22:36:31.802539   28961 lock.go:35] WriteFile acquiring /home/bky/.minikube/profiles/minikube/apiserver.crt.7fb57e3c: {Name:mk06054682a65b66838228ff863b12fbd80b3dfa Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0725 22:36:31.802738   28961 crypto.go:164] Writing key to /home/bky/.minikube/profiles/minikube/apiserver.key.7fb57e3c ...
I0725 22:36:31.802751   28961 lock.go:35] WriteFile acquiring /home/bky/.minikube/profiles/minikube/apiserver.key.7fb57e3c: {Name:mk9a9915dc33f28497fe51a2f37986c9ca953051 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0725 22:36:31.802872   28961 certs.go:381] copying /home/bky/.minikube/profiles/minikube/apiserver.crt.7fb57e3c -> /home/bky/.minikube/profiles/minikube/apiserver.crt
I0725 22:36:31.803022   28961 certs.go:385] copying /home/bky/.minikube/profiles/minikube/apiserver.key.7fb57e3c -> /home/bky/.minikube/profiles/minikube/apiserver.key
I0725 22:36:31.803154   28961 certs.go:363] generating signed profile cert for "aggregator": /home/bky/.minikube/profiles/minikube/proxy-client.key
I0725 22:36:31.803173   28961 crypto.go:68] Generating cert /home/bky/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0725 22:36:32.063899   28961 crypto.go:156] Writing cert to /home/bky/.minikube/profiles/minikube/proxy-client.crt ...
I0725 22:36:32.063921   28961 lock.go:35] WriteFile acquiring /home/bky/.minikube/profiles/minikube/proxy-client.crt: {Name:mk5744e6acf56817383283f0b6d99e85c3810f8e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0725 22:36:32.064123   28961 crypto.go:164] Writing key to /home/bky/.minikube/profiles/minikube/proxy-client.key ...
I0725 22:36:32.064136   28961 lock.go:35] WriteFile acquiring /home/bky/.minikube/profiles/minikube/proxy-client.key: {Name:mk328d0d334b3e2608d54a3ae5690536997b06d4 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0725 22:36:32.064470   28961 certs.go:484] found cert: /home/bky/.minikube/certs/ca-key.pem (1679 bytes)
I0725 22:36:32.064569   28961 certs.go:484] found cert: /home/bky/.minikube/certs/ca.pem (1070 bytes)
I0725 22:36:32.064638   28961 certs.go:484] found cert: /home/bky/.minikube/certs/cert.pem (1115 bytes)
I0725 22:36:32.064684   28961 certs.go:484] found cert: /home/bky/.minikube/certs/key.pem (1675 bytes)
I0725 22:36:32.065633   28961 ssh_runner.go:362] scp /home/bky/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0725 22:36:32.118477   28961 ssh_runner.go:362] scp /home/bky/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0725 22:36:32.175625   28961 ssh_runner.go:362] scp /home/bky/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0725 22:36:32.232769   28961 ssh_runner.go:362] scp /home/bky/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0725 22:36:32.304820   28961 ssh_runner.go:362] scp /home/bky/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0725 22:36:32.367675   28961 ssh_runner.go:362] scp /home/bky/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0725 22:36:32.418990   28961 ssh_runner.go:362] scp /home/bky/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0725 22:36:32.477006   28961 ssh_runner.go:362] scp /home/bky/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0725 22:36:32.528945   28961 ssh_runner.go:362] scp /home/bky/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0725 22:36:32.586700   28961 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (740 bytes)
I0725 22:36:32.626622   28961 ssh_runner.go:195] Run: openssl version
I0725 22:36:32.642050   28961 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0725 22:36:32.664988   28961 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0725 22:36:32.673679   28961 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Jul 23 21:55 /usr/share/ca-certificates/minikubeCA.pem
I0725 22:36:32.673778   28961 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0725 22:36:32.689478   28961 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0725 22:36:32.710155   28961 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0725 22:36:32.718682   28961 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I0725 22:36:32.718754   28961 kubeadm.go:391] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:3747 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/bky:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0725 22:36:32.718948   28961 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0725 22:36:32.754950   28961 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0725 22:36:32.775714   28961 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0725 22:36:32.796538   28961 kubeadm.go:213] ignoring SystemVerification for kubeadm because of docker driver
I0725 22:36:32.796648   28961 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0725 22:36:32.816515   28961 kubeadm.go:154] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0725 22:36:32.816553   28961 kubeadm.go:156] found existing configuration files:

I0725 22:36:32.816654   28961 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0725 22:36:32.839518   28961 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0725 22:36:32.839630   28961 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0725 22:36:32.861100   28961 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0725 22:36:32.881034   28961 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0725 22:36:32.881128   28961 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0725 22:36:32.900237   28961 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0725 22:36:32.920154   28961 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0725 22:36:32.920255   28961 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0725 22:36:32.941800   28961 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0725 22:36:32.964726   28961 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0725 22:36:32.964826   28961 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0725 22:36:32.987795   28961 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0725 22:36:33.175035   28961 kubeadm.go:309] 	[WARNING Swap]: swap is supported for cgroup v2 only; the NodeSwap feature gate of the kubelet is beta but disabled by default
I0725 22:36:33.302276   28961 kubeadm.go:309] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0725 22:36:51.254231   28961 kubeadm.go:309] [init] Using Kubernetes version: v1.30.0
I0725 22:36:51.254367   28961 kubeadm.go:309] [preflight] Running pre-flight checks
I0725 22:36:51.254589   28961 kubeadm.go:309] [preflight] Pulling images required for setting up a Kubernetes cluster
I0725 22:36:51.254893   28961 kubeadm.go:309] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0725 22:36:51.255149   28961 kubeadm.go:309] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0725 22:36:51.255373   28961 kubeadm.go:309] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0725 22:36:51.257970   28961 out.go:204]     ▪ Generating certificates and keys ...
I0725 22:36:51.259031   28961 kubeadm.go:309] [certs] Using existing ca certificate authority
I0725 22:36:51.259225   28961 kubeadm.go:309] [certs] Using existing apiserver certificate and key on disk
I0725 22:36:51.259430   28961 kubeadm.go:309] [certs] Generating "apiserver-kubelet-client" certificate and key
I0725 22:36:51.259605   28961 kubeadm.go:309] [certs] Generating "front-proxy-ca" certificate and key
I0725 22:36:51.259784   28961 kubeadm.go:309] [certs] Generating "front-proxy-client" certificate and key
I0725 22:36:51.259941   28961 kubeadm.go:309] [certs] Generating "etcd/ca" certificate and key
I0725 22:36:51.260100   28961 kubeadm.go:309] [certs] Generating "etcd/server" certificate and key
I0725 22:36:51.260427   28961 kubeadm.go:309] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0725 22:36:51.260603   28961 kubeadm.go:309] [certs] Generating "etcd/peer" certificate and key
I0725 22:36:51.260934   28961 kubeadm.go:309] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0725 22:36:51.261129   28961 kubeadm.go:309] [certs] Generating "etcd/healthcheck-client" certificate and key
I0725 22:36:51.261323   28961 kubeadm.go:309] [certs] Generating "apiserver-etcd-client" certificate and key
I0725 22:36:51.261455   28961 kubeadm.go:309] [certs] Generating "sa" key and public key
I0725 22:36:51.261619   28961 kubeadm.go:309] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0725 22:36:51.261766   28961 kubeadm.go:309] [kubeconfig] Writing "admin.conf" kubeconfig file
I0725 22:36:51.262356   28961 kubeadm.go:309] [kubeconfig] Writing "super-admin.conf" kubeconfig file
I0725 22:36:51.262507   28961 kubeadm.go:309] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0725 22:36:51.263045   28961 kubeadm.go:309] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0725 22:36:51.263220   28961 kubeadm.go:309] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0725 22:36:51.263464   28961 kubeadm.go:309] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0725 22:36:51.263668   28961 kubeadm.go:309] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0725 22:36:51.266410   28961 out.go:204]     ▪ Booting up control plane ...
I0725 22:36:51.266826   28961 kubeadm.go:309] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0725 22:36:51.267061   28961 kubeadm.go:309] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0725 22:36:51.267262   28961 kubeadm.go:309] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0725 22:36:51.267575   28961 kubeadm.go:309] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0725 22:36:51.267833   28961 kubeadm.go:309] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0725 22:36:51.267952   28961 kubeadm.go:309] [kubelet-start] Starting the kubelet
I0725 22:36:51.268309   28961 kubeadm.go:309] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
I0725 22:36:51.268529   28961 kubeadm.go:309] [kubelet-check] Waiting for a healthy kubelet. This can take up to 4m0s
I0725 22:36:51.268680   28961 kubeadm.go:309] [kubelet-check] The kubelet is healthy after 1.003718855s
I0725 22:36:51.268861   28961 kubeadm.go:309] [api-check] Waiting for a healthy API server. This can take up to 4m0s
I0725 22:36:51.269020   28961 kubeadm.go:309] [api-check] The API server is healthy after 8.505867566s
I0725 22:36:51.269290   28961 kubeadm.go:309] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0725 22:36:51.269622   28961 kubeadm.go:309] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0725 22:36:51.269772   28961 kubeadm.go:309] [upload-certs] Skipping phase. Please see --upload-certs
I0725 22:36:51.270485   28961 kubeadm.go:309] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0725 22:36:51.270710   28961 kubeadm.go:309] [bootstrap-token] Using token: bxrtnn.heo2rp2xdhrqgi5k
I0725 22:36:51.272396   28961 out.go:204]     ▪ Configuring RBAC rules ...
I0725 22:36:51.272816   28961 kubeadm.go:309] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0725 22:36:51.273040   28961 kubeadm.go:309] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0725 22:36:51.273395   28961 kubeadm.go:309] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0725 22:36:51.273736   28961 kubeadm.go:309] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0725 22:36:51.274028   28961 kubeadm.go:309] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0725 22:36:51.274244   28961 kubeadm.go:309] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0725 22:36:51.274533   28961 kubeadm.go:309] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0725 22:36:51.274655   28961 kubeadm.go:309] [addons] Applied essential addon: CoreDNS
I0725 22:36:51.274799   28961 kubeadm.go:309] [addons] Applied essential addon: kube-proxy
I0725 22:36:51.274810   28961 kubeadm.go:309] 
I0725 22:36:51.274987   28961 kubeadm.go:309] Your Kubernetes control-plane has initialized successfully!
I0725 22:36:51.274998   28961 kubeadm.go:309] 
I0725 22:36:51.275191   28961 kubeadm.go:309] To start using your cluster, you need to run the following as a regular user:
I0725 22:36:51.275200   28961 kubeadm.go:309] 
I0725 22:36:51.275262   28961 kubeadm.go:309]   mkdir -p $HOME/.kube
I0725 22:36:51.275441   28961 kubeadm.go:309]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0725 22:36:51.275568   28961 kubeadm.go:309]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0725 22:36:51.275575   28961 kubeadm.go:309] 
I0725 22:36:51.275717   28961 kubeadm.go:309] Alternatively, if you are the root user, you can run:
I0725 22:36:51.275726   28961 kubeadm.go:309] 
I0725 22:36:51.275844   28961 kubeadm.go:309]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0725 22:36:51.275852   28961 kubeadm.go:309] 
I0725 22:36:51.275984   28961 kubeadm.go:309] You should now deploy a pod network to the cluster.
I0725 22:36:51.276185   28961 kubeadm.go:309] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0725 22:36:51.276358   28961 kubeadm.go:309]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0725 22:36:51.276366   28961 kubeadm.go:309] 
I0725 22:36:51.276887   28961 kubeadm.go:309] You can now join any number of control-plane nodes by copying certificate authorities
I0725 22:36:51.277084   28961 kubeadm.go:309] and service account keys on each node and then running the following as root:
I0725 22:36:51.277091   28961 kubeadm.go:309] 
I0725 22:36:51.277305   28961 kubeadm.go:309]   kubeadm join control-plane.minikube.internal:8443 --token bxrtnn.heo2rp2xdhrqgi5k \
I0725 22:36:51.277570   28961 kubeadm.go:309] 	--discovery-token-ca-cert-hash sha256:ddfc5ada3b17c00f3c4c8f6a43411fd5024f9dac7321fa10fdb8067b3a54a59f \
I0725 22:36:51.277620   28961 kubeadm.go:309] 	--control-plane 
I0725 22:36:51.277628   28961 kubeadm.go:309] 
I0725 22:36:51.277844   28961 kubeadm.go:309] Then you can join any number of worker nodes by running the following on each as root:
I0725 22:36:51.277853   28961 kubeadm.go:309] 
I0725 22:36:51.278061   28961 kubeadm.go:309] kubeadm join control-plane.minikube.internal:8443 --token bxrtnn.heo2rp2xdhrqgi5k \
I0725 22:36:51.278336   28961 kubeadm.go:309] 	--discovery-token-ca-cert-hash sha256:ddfc5ada3b17c00f3c4c8f6a43411fd5024f9dac7321fa10fdb8067b3a54a59f 
I0725 22:36:51.278348   28961 cni.go:84] Creating CNI manager for ""
I0725 22:36:51.278371   28961 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0725 22:36:51.280175   28961 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0725 22:36:51.282122   28961 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0725 22:36:51.326930   28961 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (496 bytes)
I0725 22:36:51.394527   28961 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0725 22:36:51.394681   28961 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.30.0/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0725 22:36:51.394809   28961 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.30.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig label --overwrite nodes minikube minikube.k8s.io/updated_at=2024_07_25T22_36_51_0700 minikube.k8s.io/version=v1.33.1 minikube.k8s.io/commit=5883c09216182566a63dff4c326a6fc9ed2982ff minikube.k8s.io/name=minikube minikube.k8s.io/primary=true
I0725 22:36:51.626305   28961 kubeadm.go:1107] duration metric: took 231.738239ms to wait for elevateKubeSystemPrivileges
I0725 22:36:51.626365   28961 ops.go:34] apiserver oom_adj: -16
W0725 22:36:51.626401   28961 kubeadm.go:286] apiserver tunnel failed: apiserver port not set
I0725 22:36:51.626417   28961 kubeadm.go:393] duration metric: took 18.907666951s to StartCluster
I0725 22:36:51.626444   28961 settings.go:142] acquiring lock: {Name:mk84d8ea03572ec0ce7aa3e8f52c0d20c31ceba6 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0725 22:36:51.626544   28961 settings.go:150] Updating kubeconfig:  /home/bky/.kube/config
I0725 22:36:51.627648   28961 lock.go:35] WriteFile acquiring /home/bky/.kube/config: {Name:mk4ab4e4e7ea53c333e6ebd4fa5999b630a1a604 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0725 22:36:51.628039   28961 start.go:234] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0725 22:36:51.629405   28961 out.go:177] 🔎  Verifying Kubernetes components...
I0725 22:36:51.628082   28961 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0725 22:36:51.628100   28961 addons.go:502] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volumesnapshots:false yakd:false]
I0725 22:36:51.628370   28961 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0725 22:36:51.631518   28961 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0725 22:36:51.631518   28961 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0725 22:36:51.631566   28961 addons.go:234] Setting addon storage-provisioner=true in "minikube"
I0725 22:36:51.631566   28961 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0725 22:36:51.631605   28961 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0725 22:36:51.631617   28961 host.go:66] Checking if "minikube" exists ...
I0725 22:36:51.632238   28961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0725 22:36:51.632667   28961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0725 22:36:51.731240   28961 addons.go:234] Setting addon default-storageclass=true in "minikube"
I0725 22:36:51.731292   28961 host.go:66] Checking if "minikube" exists ...
I0725 22:36:51.740657   28961 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0725 22:36:51.740601   28961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0725 22:36:51.742205   28961 addons.go:426] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0725 22:36:51.742223   28961 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0725 22:36:51.742327   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:51.833505   28961 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:41651 SSHKeyPath:/home/bky/.minikube/machines/minikube/id_rsa Username:docker}
I0725 22:36:51.847151   28961 addons.go:426] installing /etc/kubernetes/addons/storageclass.yaml
I0725 22:36:51.847170   28961 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0725 22:36:51.847277   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0725 22:36:51.951480   28961 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:41651 SSHKeyPath:/home/bky/.minikube/machines/minikube/id_rsa Username:docker}
I0725 22:36:52.175001   28961 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0725 22:36:52.193560   28961 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0725 22:36:52.287290   28961 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0725 22:36:52.287976   28961 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.49.1 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.30.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0725 22:36:53.052132   28961 start.go:946] {"host.minikube.internal": 192.168.49.1} host record injected into CoreDNS's ConfigMap
I0725 22:36:53.052238   28961 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0725 22:36:53.120744   28961 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0725 22:36:53.122933   28961 addons.go:505] duration metric: took 1.49482547s for enable addons: enabled=[storage-provisioner default-storageclass]
I0725 22:36:53.121756   28961 api_server.go:52] waiting for apiserver process to appear ...
I0725 22:36:53.123071   28961 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0725 22:36:53.206076   28961 api_server.go:72] duration metric: took 1.57799723s to wait for apiserver process to appear ...
I0725 22:36:53.206098   28961 api_server.go:88] waiting for apiserver healthz status ...
I0725 22:36:53.206127   28961 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:41761/healthz ...
I0725 22:36:53.224902   28961 api_server.go:279] https://127.0.0.1:41761/healthz returned 200:
ok
I0725 22:36:53.230852   28961 api_server.go:141] control plane version: v1.30.0
I0725 22:36:53.230882   28961 api_server.go:131] duration metric: took 24.773718ms to wait for apiserver health ...
I0725 22:36:53.230897   28961 system_pods.go:43] waiting for kube-system pods to appear ...
I0725 22:36:53.273066   28961 system_pods.go:59] 5 kube-system pods found
I0725 22:36:53.273106   28961 system_pods.go:61] "etcd-minikube" [527d1c52-b5bb-4b6d-8433-066740045707] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0725 22:36:53.273124   28961 system_pods.go:61] "kube-apiserver-minikube" [aec0ed58-06d7-4f8e-94c7-fae76f075302] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0725 22:36:53.273152   28961 system_pods.go:61] "kube-controller-manager-minikube" [68049c3d-c857-4e2e-b3e1-52c37163632d] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0725 22:36:53.273167   28961 system_pods.go:61] "kube-scheduler-minikube" [3a1cefeb-d326-422c-8de3-60de291743e4] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0725 22:36:53.273177   28961 system_pods.go:61] "storage-provisioner" [e032ea78-e0c0-48bf-add2-222f3b905b00] Pending: PodScheduled:Unschedulable (0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.)
I0725 22:36:53.273189   28961 system_pods.go:74] duration metric: took 42.281894ms to wait for pod list to return data ...
I0725 22:36:53.273209   28961 kubeadm.go:576] duration metric: took 1.645135149s to wait for: map[apiserver:true system_pods:true]
I0725 22:36:53.273241   28961 node_conditions.go:102] verifying NodePressure condition ...
I0725 22:36:53.298461   28961 node_conditions.go:122] node storage ephemeral capacity is 65739308Ki
I0725 22:36:53.298492   28961 node_conditions.go:123] node cpu capacity is 4
I0725 22:36:53.298512   28961 node_conditions.go:105] duration metric: took 25.262327ms to run NodePressure ...
I0725 22:36:53.298535   28961 start.go:240] waiting for startup goroutines ...
I0725 22:36:53.559041   28961 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0725 22:36:53.559088   28961 start.go:245] waiting for cluster config update ...
I0725 22:36:53.559104   28961 start.go:254] writing updated cluster config ...
I0725 22:36:53.559462   28961 ssh_runner.go:195] Run: rm -f paused
I0725 22:36:53.659014   28961 start.go:600] kubectl: 1.30.3, cluster: 1.30.0 (minor skew: 0)
I0725 22:36:53.660513   28961 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


==> Docker <==
Jul 25 20:36:25 minikube dockerd[588]: time="2024-07-25T20:36:25.536548126Z" level=info msg="Docker daemon" commit=ac2de55 containerd-snapshotter=false storage-driver=overlay2 version=26.1.1
Jul 25 20:36:25 minikube dockerd[588]: time="2024-07-25T20:36:25.536663049Z" level=info msg="Daemon has completed initialization"
Jul 25 20:36:25 minikube dockerd[588]: time="2024-07-25T20:36:25.586825141Z" level=info msg="API listen on /var/run/docker.sock"
Jul 25 20:36:25 minikube dockerd[588]: time="2024-07-25T20:36:25.587189688Z" level=info msg="API listen on [::]:2376"
Jul 25 20:36:25 minikube systemd[1]: Started Docker Application Container Engine.
Jul 25 20:36:27 minikube systemd[1]: Stopping Docker Application Container Engine...
Jul 25 20:36:27 minikube dockerd[588]: time="2024-07-25T20:36:27.288084622Z" level=info msg="Processing signal 'terminated'"
Jul 25 20:36:27 minikube dockerd[588]: time="2024-07-25T20:36:27.290218642Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Jul 25 20:36:27 minikube dockerd[588]: time="2024-07-25T20:36:27.291006700Z" level=info msg="Daemon shutdown complete"
Jul 25 20:36:27 minikube systemd[1]: docker.service: Deactivated successfully.
Jul 25 20:36:27 minikube systemd[1]: Stopped Docker Application Container Engine.
Jul 25 20:36:27 minikube systemd[1]: Starting Docker Application Container Engine...
Jul 25 20:36:27 minikube dockerd[847]: time="2024-07-25T20:36:27.554226731Z" level=info msg="Starting up"
Jul 25 20:36:27 minikube dockerd[847]: time="2024-07-25T20:36:27.613304876Z" level=info msg="[graphdriver] using prior storage driver: overlay2"
Jul 25 20:36:27 minikube dockerd[847]: time="2024-07-25T20:36:27.624730562Z" level=info msg="Loading containers: start."
Jul 25 20:36:27 minikube dockerd[847]: time="2024-07-25T20:36:27.862756552Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Jul 25 20:36:27 minikube dockerd[847]: time="2024-07-25T20:36:27.982775944Z" level=info msg="Loading containers: done."
Jul 25 20:36:28 minikube dockerd[847]: time="2024-07-25T20:36:28.002863531Z" level=info msg="Docker daemon" commit=ac2de55 containerd-snapshotter=false storage-driver=overlay2 version=26.1.1
Jul 25 20:36:28 minikube dockerd[847]: time="2024-07-25T20:36:28.003082106Z" level=info msg="Daemon has completed initialization"
Jul 25 20:36:28 minikube systemd[1]: Started Docker Application Container Engine.
Jul 25 20:36:28 minikube dockerd[847]: time="2024-07-25T20:36:28.067685929Z" level=info msg="API listen on /var/run/docker.sock"
Jul 25 20:36:28 minikube dockerd[847]: time="2024-07-25T20:36:28.067739412Z" level=info msg="API listen on [::]:2376"
Jul 25 20:36:28 minikube systemd[1]: Stopping Docker Application Container Engine...
Jul 25 20:36:28 minikube dockerd[847]: time="2024-07-25T20:36:28.264729788Z" level=info msg="Processing signal 'terminated'"
Jul 25 20:36:28 minikube dockerd[847]: time="2024-07-25T20:36:28.266653261Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Jul 25 20:36:28 minikube dockerd[847]: time="2024-07-25T20:36:28.267689447Z" level=info msg="Daemon shutdown complete"
Jul 25 20:36:28 minikube systemd[1]: docker.service: Deactivated successfully.
Jul 25 20:36:28 minikube systemd[1]: Stopped Docker Application Container Engine.
Jul 25 20:36:28 minikube systemd[1]: Starting Docker Application Container Engine...
Jul 25 20:36:28 minikube dockerd[1064]: time="2024-07-25T20:36:28.371137803Z" level=info msg="Starting up"
Jul 25 20:36:28 minikube dockerd[1064]: time="2024-07-25T20:36:28.431778134Z" level=info msg="[graphdriver] trying configured driver: overlay2"
Jul 25 20:36:28 minikube dockerd[1064]: time="2024-07-25T20:36:28.456846497Z" level=info msg="Loading containers: start."
Jul 25 20:36:28 minikube dockerd[1064]: time="2024-07-25T20:36:28.630544900Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Jul 25 20:36:28 minikube dockerd[1064]: time="2024-07-25T20:36:28.705086639Z" level=info msg="Loading containers: done."
Jul 25 20:36:28 minikube dockerd[1064]: time="2024-07-25T20:36:28.724197864Z" level=info msg="Docker daemon" commit=ac2de55 containerd-snapshotter=false storage-driver=overlay2 version=26.1.1
Jul 25 20:36:28 minikube dockerd[1064]: time="2024-07-25T20:36:28.724296730Z" level=info msg="Daemon has completed initialization"
Jul 25 20:36:28 minikube dockerd[1064]: time="2024-07-25T20:36:28.784552087Z" level=info msg="API listen on /var/run/docker.sock"
Jul 25 20:36:28 minikube systemd[1]: Started Docker Application Container Engine.
Jul 25 20:36:28 minikube dockerd[1064]: time="2024-07-25T20:36:28.784580059Z" level=info msg="API listen on [::]:2376"
Jul 25 20:36:29 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Jul 25 20:36:29 minikube cri-dockerd[1285]: time="2024-07-25T20:36:29Z" level=info msg="Starting cri-dockerd dev (HEAD)"
Jul 25 20:36:29 minikube cri-dockerd[1285]: time="2024-07-25T20:36:29Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Jul 25 20:36:29 minikube cri-dockerd[1285]: time="2024-07-25T20:36:29Z" level=info msg="Start docker client with request timeout 0s"
Jul 25 20:36:29 minikube cri-dockerd[1285]: time="2024-07-25T20:36:29Z" level=info msg="Hairpin mode is set to hairpin-veth"
Jul 25 20:36:29 minikube cri-dockerd[1285]: time="2024-07-25T20:36:29Z" level=info msg="Loaded network plugin cni"
Jul 25 20:36:29 minikube cri-dockerd[1285]: time="2024-07-25T20:36:29Z" level=info msg="Docker cri networking managed by network plugin cni"
Jul 25 20:36:29 minikube cri-dockerd[1285]: time="2024-07-25T20:36:29Z" level=info msg="Setting cgroupDriver systemd"
Jul 25 20:36:29 minikube cri-dockerd[1285]: time="2024-07-25T20:36:29Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Jul 25 20:36:29 minikube cri-dockerd[1285]: time="2024-07-25T20:36:29Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Jul 25 20:36:29 minikube cri-dockerd[1285]: time="2024-07-25T20:36:29Z" level=info msg="Start cri-dockerd grpc backend"
Jul 25 20:36:29 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Jul 25 20:36:41 minikube cri-dockerd[1285]: time="2024-07-25T20:36:41Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/9ccd01421393773ba9748aab5c837036e1992ccc64330d2ae8812924b6f11a03/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Jul 25 20:36:41 minikube cri-dockerd[1285]: time="2024-07-25T20:36:41Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/e01cec1d5234a1ee86f5a112811f6cf60e88a640ee09df40ef7326435d884e95/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Jul 25 20:36:41 minikube cri-dockerd[1285]: time="2024-07-25T20:36:41Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/6bd5477f8067622e53ea47d937e7c4985a30d406b06890daf5a14894982798a0/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Jul 25 20:36:41 minikube cri-dockerd[1285]: time="2024-07-25T20:36:41Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/e13345bf10a5755dde4c4359ae161f68421340506a05f5488091e877baa98e7b/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Jul 25 20:37:04 minikube cri-dockerd[1285]: time="2024-07-25T20:37:04Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/d425ed95f5f23b22aa6bac829ceab0bb5eab56522fe0fc97eba71bb577990231/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Jul 25 20:37:04 minikube cri-dockerd[1285]: time="2024-07-25T20:37:04Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/9837cdddae228f6949c8298d1b0b7255ff8156182b17adb57e2713b3a40819b3/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Jul 25 20:37:05 minikube cri-dockerd[1285]: time="2024-07-25T20:37:05Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/35e736fe62d79231585ff1e82a068b1b3243aa9e26fef5e1ee0e7bf305b1a70c/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Jul 25 20:37:11 minikube cri-dockerd[1285]: time="2024-07-25T20:37:11Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Jul 25 20:37:35 minikube dockerd[1064]: time="2024-07-25T20:37:35.299750542Z" level=info msg="ignoring event" container=5601f6e474686f02c0e79fff799e2fb23aa7cfe8a2cc27f5f91faec9ddcbb3ca module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"


==> container status <==
CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
544b8972c60e7       6e38f40d628db       3 minutes ago       Running             storage-provisioner       1                   d425ed95f5f23       storage-provisioner
53d1af819fe49       cbb01a7bd410d       3 minutes ago       Running             coredns                   0                   35e736fe62d79       coredns-7db6d8ff4d-vdnw5
ef020f4399083       a0bf559e280cf       3 minutes ago       Running             kube-proxy                0                   9837cdddae228       kube-proxy-ppxvq
5601f6e474686       6e38f40d628db       3 minutes ago       Exited              storage-provisioner       0                   d425ed95f5f23       storage-provisioner
29f23cbd32f75       c42f13656d0b2       3 minutes ago       Running             kube-apiserver            0                   e13345bf10a57       kube-apiserver-minikube
488db3ffab2a5       c7aad43836fa5       3 minutes ago       Running             kube-controller-manager   0                   e01cec1d5234a       kube-controller-manager-minikube
5adff3108ac43       259c8277fcbbc       3 minutes ago       Running             kube-scheduler            0                   6bd5477f80676       kube-scheduler-minikube
5fef23b6e5723       3861cfcd7c04c       3 minutes ago       Running             etcd                      0                   9ccd014213937       etcd-minikube


==> coredns [53d1af819fe4] <==
.:53
[INFO] plugin/reload: Running configuration SHA512 = 05e3eaddc414b2d71a69b2e2bc6f2681fc1f4d04bcdd3acc1a41457bb7db518208b95ddfc4c9fffedc59c25a8faf458be1af4915a4a3c0d6777cb7a346bc5d86
CoreDNS-1.11.1
linux/amd64, go1.20.7, ae2bbc2
[INFO] 127.0.0.1:50684 - 9166 "HINFO IN 670482550601009838.8262449019377505629. udp 56 false 512" NXDOMAIN qr,rd,ra 56 0.003202261s


==> describe nodes <==
Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=5883c09216182566a63dff4c326a6fc9ed2982ff
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2024_07_25T22_36_51_0700
                    minikube.k8s.io/version=v1.33.1
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Thu, 25 Jul 2024 20:36:47 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Thu, 25 Jul 2024 20:40:35 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Thu, 25 Jul 2024 20:37:11 +0000   Thu, 25 Jul 2024 20:36:44 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Thu, 25 Jul 2024 20:37:11 +0000   Thu, 25 Jul 2024 20:36:44 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Thu, 25 Jul 2024 20:37:11 +0000   Thu, 25 Jul 2024 20:36:44 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Thu, 25 Jul 2024 20:37:11 +0000   Thu, 25 Jul 2024 20:36:51 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                4
  ephemeral-storage:  65739308Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             3887068Ki
  pods:               110
Allocatable:
  cpu:                4
  ephemeral-storage:  65739308Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             3887068Ki
  pods:               110
System Info:
  Machine ID:                 9542ed1edcc54a399ed0b126413471cf
  System UUID:                9542ed1edcc54a399ed0b126413471cf
  Boot ID:                    317c2ea7-cbb3-4b91-adcb-31efd0f8fabb
  Kernel Version:             6.6.32-linuxkit
  OS Image:                   Ubuntu 22.04.4 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://26.1.1
  Kubelet Version:            v1.30.0
  Kube-Proxy Version:         v1.30.0
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (7 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  kube-system                 coredns-7db6d8ff4d-vdnw5            100m (2%!)(MISSING)     0 (0%!)(MISSING)      70Mi (1%!)(MISSING)        170Mi (4%!)(MISSING)     3m33s
  kube-system                 etcd-minikube                       100m (2%!)(MISSING)     0 (0%!)(MISSING)      100Mi (2%!)(MISSING)       0 (0%!)(MISSING)         3m46s
  kube-system                 kube-apiserver-minikube             250m (6%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3m46s
  kube-system                 kube-controller-manager-minikube    200m (5%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3m49s
  kube-system                 kube-proxy-ppxvq                    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3m33s
  kube-system                 kube-scheduler-minikube             100m (2%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3m46s
  kube-system                 storage-provisioner                 0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3m44s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (18%!)(MISSING)  0 (0%!)(MISSING)
  memory             170Mi (4%!)(MISSING)  170Mi (4%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age    From             Message
  ----    ------                   ----   ----             -------
  Normal  Starting                 3m31s  kube-proxy       
  Normal  Starting                 3m47s  kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  3m47s  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    3m47s  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     3m47s  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeNotReady             3m47s  kubelet          Node minikube status is now: NodeNotReady
  Normal  NodeAllocatableEnforced  3m46s  kubelet          Updated Node Allocatable limit across pods
  Normal  NodeReady                3m46s  kubelet          Node minikube status is now: NodeReady
  Normal  RegisteredNode           3m33s  node-controller  Node minikube event: Registered Node minikube in Controller


==> dmesg <==
[Jul25 15:34] Hangcheck: starting hangcheck timer 0.9.1 (tick is 180 seconds, margin is 60 seconds).
[  +0.297484] netlink: 'init': attribute type 4 has an invalid length.
[  +0.127689] fakeowner: loading out-of-tree module taints kernel.
[Jul25 15:35] systemd[811]: memfd_create() called without MFD_EXEC or MFD_NOEXEC_SEAL set
[Jul25 16:25] clocksource: Long readout interval, skipping watchdog check: cs_nsec: 1062626629 wd_nsec: 1062626595


==> etcd [5fef23b6e572] <==
{"level":"warn","ts":"2024-07-25T20:36:42.289641Z","caller":"embed/config.go:679","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-07-25T20:36:42.289981Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"warn","ts":"2024-07-25T20:36:42.291097Z","caller":"embed/config.go:679","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-07-25T20:36:42.291157Z","caller":"embed/etcd.go:127","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-07-25T20:36:42.29123Z","caller":"embed/etcd.go:494","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-07-25T20:36:42.293557Z","caller":"embed/etcd.go:135","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2024-07-25T20:36:42.293854Z","caller":"embed/etcd.go:308","msg":"starting an etcd server","etcd-version":"3.5.12","git-sha":"e7b3bb6cc","go-version":"go1.20.13","go-os":"linux","go-arch":"amd64","max-cpu-set":4,"max-cpu-available":4,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2024-07-25T20:36:42.303262Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"8.681338ms"}
{"level":"info","ts":"2024-07-25T20:36:42.324357Z","caller":"etcdserver/raft.go:495","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2024-07-25T20:36:42.324536Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2024-07-25T20:36:42.324586Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2024-07-25T20:36:42.324612Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2024-07-25T20:36:42.324635Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2024-07-25T20:36:42.324715Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2024-07-25T20:36:42.333376Z","caller":"auth/store.go:1241","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2024-07-25T20:36:42.336369Z","caller":"mvcc/kvstore.go:407","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2024-07-25T20:36:42.338795Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2024-07-25T20:36:42.3439Z","caller":"etcdserver/server.go:860","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.12","cluster-version":"to_be_decided"}
{"level":"info","ts":"2024-07-25T20:36:42.345544Z","caller":"etcdserver/server.go:744","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2024-07-25T20:36:42.34582Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2024-07-25T20:36:42.346193Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2024-07-25T20:36:42.346271Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2024-07-25T20:36:42.347041Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2024-07-25T20:36:42.347353Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-07-25T20:36:42.360273Z","caller":"embed/etcd.go:726","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-07-25T20:36:42.360878Z","caller":"embed/etcd.go:277","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2024-07-25T20:36:42.361038Z","caller":"embed/etcd.go:597","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-07-25T20:36:42.371223Z","caller":"embed/etcd.go:569","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-07-25T20:36:42.362077Z","caller":"embed/etcd.go:857","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2024-07-25T20:36:43.228073Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2024-07-25T20:36:43.228518Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2024-07-25T20:36:43.228794Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2024-07-25T20:36:43.229097Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2024-07-25T20:36:43.229399Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-07-25T20:36:43.229518Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2024-07-25T20:36:43.229732Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-07-25T20:36:43.238069Z","caller":"etcdserver/server.go:2578","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2024-07-25T20:36:43.238904Z","caller":"etcdserver/server.go:2068","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2024-07-25T20:36:43.239329Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2024-07-25T20:36:43.239751Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2024-07-25T20:36:43.240148Z","caller":"etcdserver/server.go:2602","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2024-07-25T20:36:43.239368Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-07-25T20:36:43.24005Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2024-07-25T20:36:43.243118Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2024-07-25T20:36:43.239388Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-07-25T20:36:43.247493Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2024-07-25T20:36:43.26689Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}


==> kernel <==
 20:40:37 up  5:06,  0 users,  load average: 3.04, 2.82, 2.68
Linux minikube 6.6.32-linuxkit #1 SMP PREEMPT_DYNAMIC Thu Jun 13 14:14:43 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.4 LTS"


==> kube-apiserver [29f23cbd32f7] <==
I0725 20:36:47.171854       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0725 20:36:47.172069       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0725 20:36:47.172459       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0725 20:36:47.172479       1 shared_informer.go:313] Waiting for caches to sync for cluster_authentication_trust_controller
I0725 20:36:47.172575       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0725 20:36:47.172611       1 apf_controller.go:374] Starting API Priority and Fairness config controller
I0725 20:36:47.172750       1 controller.go:139] Starting OpenAPI controller
I0725 20:36:47.172828       1 controller.go:87] Starting OpenAPI V3 controller
I0725 20:36:47.172896       1 naming_controller.go:291] Starting NamingConditionController
I0725 20:36:47.172992       1 establishing_controller.go:76] Starting EstablishingController
I0725 20:36:47.173026       1 controller.go:78] Starting OpenAPI AggregationController
I0725 20:36:47.173050       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0725 20:36:47.173094       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0725 20:36:47.173125       1 crd_finalizer.go:266] Starting CRDFinalizer
I0725 20:36:47.173815       1 available_controller.go:423] Starting AvailableConditionController
I0725 20:36:47.173838       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0725 20:36:47.173892       1 aggregator.go:163] waiting for initial CRD sync...
I0725 20:36:47.174029       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0725 20:36:47.174048       1 shared_informer.go:313] Waiting for caches to sync for crd-autoregister
I0725 20:36:47.174148       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0725 20:36:47.174167       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0725 20:36:47.174664       1 controller.go:116] Starting legacy_token_tracking_controller
I0725 20:36:47.174689       1 shared_informer.go:313] Waiting for caches to sync for configmaps
I0725 20:36:47.237096       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0725 20:36:47.237570       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0725 20:36:47.312288       1 shared_informer.go:320] Caches are synced for node_authorizer
I0725 20:36:47.336019       1 shared_informer.go:320] Caches are synced for *generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]
I0725 20:36:47.336074       1 policy_source.go:224] refreshing policies
I0725 20:36:47.337130       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0725 20:36:47.337232       1 shared_informer.go:320] Caches are synced for crd-autoregister
I0725 20:36:47.337307       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0725 20:36:47.337358       1 aggregator.go:165] initial CRD sync complete...
I0725 20:36:47.337375       1 autoregister_controller.go:141] Starting autoregister controller
I0725 20:36:47.337388       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0725 20:36:47.337402       1 cache.go:39] Caches are synced for autoregister controller
I0725 20:36:47.337855       1 handler_discovery.go:447] Starting ResourceDiscoveryManager
I0725 20:36:47.375048       1 shared_informer.go:320] Caches are synced for cluster_authentication_trust_controller
I0725 20:36:47.375182       1 apf_controller.go:379] Running API Priority and Fairness config worker
I0725 20:36:47.375208       1 apf_controller.go:382] Running API Priority and Fairness periodic rebalancing process
I0725 20:36:47.377088       1 shared_informer.go:320] Caches are synced for configmaps
I0725 20:36:47.430768       1 controller.go:615] quota admission added evaluator for: namespaces
E0725 20:36:47.495329       1 controller.go:145] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
E0725 20:36:47.498873       1 controller.go:145] while syncing ConfigMap "kube-system/kube-apiserver-legacy-service-account-token-tracking", err: namespaces "kube-system" not found
I0725 20:36:47.703625       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
I0725 20:36:48.188156       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0725 20:36:48.197247       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0725 20:36:48.197290       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0725 20:36:49.262591       1 controller.go:615] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0725 20:36:49.349169       1 controller.go:615] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0725 20:36:49.518772       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0725 20:36:49.531967       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0725 20:36:49.534106       1 controller.go:615] quota admission added evaluator for: endpoints
I0725 20:36:49.547307       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0725 20:36:50.302446       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I0725 20:36:50.681569       1 controller.go:615] quota admission added evaluator for: deployments.apps
I0725 20:36:50.707859       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0725 20:36:50.731473       1 controller.go:615] quota admission added evaluator for: daemonsets.apps
I0725 20:37:04.316901       1 controller.go:615] quota admission added evaluator for: controllerrevisions.apps
I0725 20:37:04.506233       1 controller.go:615] quota admission added evaluator for: replicasets.apps
I0725 20:37:24.357811       1 alloc.go:330] "allocated clusterIPs" service="default/story-service" clusterIPs={"IPv4":"10.111.191.107"}


==> kube-controller-manager [488db3ffab2a] <==
I0725 20:37:04.119582       1 shared_informer.go:320] Caches are synced for ephemeral
I0725 20:37:04.130572       1 shared_informer.go:320] Caches are synced for TTL after finished
I0725 20:37:04.135538       1 actual_state_of_world.go:543] "Failed to update statusUpdateNeeded field in actual state of world" logger="persistentvolume-attach-detach-controller" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I0725 20:37:04.137661       1 shared_informer.go:320] Caches are synced for TTL
I0725 20:37:04.145542       1 shared_informer.go:320] Caches are synced for service account
I0725 20:37:04.148872       1 shared_informer.go:320] Caches are synced for ReplicaSet
I0725 20:37:04.149145       1 shared_informer.go:320] Caches are synced for stateful set
I0725 20:37:04.149863       1 shared_informer.go:320] Caches are synced for persistent volume
I0725 20:37:04.150400       1 shared_informer.go:320] Caches are synced for cronjob
I0725 20:37:04.155126       1 shared_informer.go:320] Caches are synced for ReplicationController
I0725 20:37:04.155622       1 shared_informer.go:320] Caches are synced for PVC protection
I0725 20:37:04.164400       1 shared_informer.go:320] Caches are synced for HPA
I0725 20:37:04.164824       1 shared_informer.go:320] Caches are synced for node
I0725 20:37:04.165267       1 range_allocator.go:175] "Sending events to api server" logger="node-ipam-controller"
I0725 20:37:04.165454       1 shared_informer.go:320] Caches are synced for crt configmap
I0725 20:37:04.166395       1 range_allocator.go:179] "Starting range CIDR allocator" logger="node-ipam-controller"
I0725 20:37:04.166442       1 shared_informer.go:313] Waiting for caches to sync for cidrallocator
I0725 20:37:04.166464       1 shared_informer.go:320] Caches are synced for cidrallocator
I0725 20:37:04.171096       1 shared_informer.go:320] Caches are synced for namespace
I0725 20:37:04.172444       1 shared_informer.go:313] Waiting for caches to sync for garbage collector
I0725 20:37:04.174561       1 shared_informer.go:320] Caches are synced for expand
I0725 20:37:04.176454       1 shared_informer.go:320] Caches are synced for attach detach
I0725 20:37:04.188599       1 shared_informer.go:320] Caches are synced for PV protection
I0725 20:37:04.189925       1 shared_informer.go:320] Caches are synced for taint-eviction-controller
I0725 20:37:04.193462       1 shared_informer.go:320] Caches are synced for job
I0725 20:37:04.193938       1 shared_informer.go:320] Caches are synced for taint
I0725 20:37:04.194671       1 node_lifecycle_controller.go:1227] "Initializing eviction metric for zone" logger="node-lifecycle-controller" zone=""
I0725 20:37:04.195546       1 shared_informer.go:320] Caches are synced for bootstrap_signer
I0725 20:37:04.195937       1 node_lifecycle_controller.go:879] "Missing timestamp for Node. Assuming now as a timestamp" logger="node-lifecycle-controller" node="minikube"
I0725 20:37:04.197862       1 shared_informer.go:320] Caches are synced for GC
I0725 20:37:04.198063       1 range_allocator.go:381] "Set node PodCIDR" logger="node-ipam-controller" node="minikube" podCIDRs=["10.244.0.0/24"]
I0725 20:37:04.197495       1 node_lifecycle_controller.go:1073] "Controller detected that zone is now in new state" logger="node-lifecycle-controller" zone="" newState="Normal"
I0725 20:37:04.203192       1 shared_informer.go:320] Caches are synced for endpoint
I0725 20:37:04.206451       1 shared_informer.go:320] Caches are synced for endpoint_slice_mirroring
I0725 20:37:04.208945       1 shared_informer.go:320] Caches are synced for ClusterRoleAggregator
I0725 20:37:04.210246       1 shared_informer.go:320] Caches are synced for daemon sets
I0725 20:37:04.245906       1 shared_informer.go:320] Caches are synced for endpoint_slice
I0725 20:37:04.347380       1 shared_informer.go:320] Caches are synced for deployment
I0725 20:37:04.359449       1 shared_informer.go:320] Caches are synced for resource quota
I0725 20:37:04.380572       1 shared_informer.go:320] Caches are synced for resource quota
I0725 20:37:04.389434       1 shared_informer.go:320] Caches are synced for certificate-csrapproving
I0725 20:37:04.390762       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kubelet-client
I0725 20:37:04.391391       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0725 20:37:04.393465       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-legacy-unknown
I0725 20:37:04.393666       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kubelet-serving
I0725 20:37:04.399984       1 shared_informer.go:320] Caches are synced for disruption
I0725 20:37:04.688539       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-7db6d8ff4d" duration="174.884486ms"
I0725 20:37:04.735699       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-7db6d8ff4d" duration="47.056327ms"
I0725 20:37:04.736664       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-7db6d8ff4d" duration="63.417µs"
I0725 20:37:04.805477       1 shared_informer.go:320] Caches are synced for garbage collector
I0725 20:37:04.805616       1 garbagecollector.go:157] "All resource monitors have synced. Proceeding to collect garbage" logger="garbage-collector-controller"
I0725 20:37:04.874547       1 shared_informer.go:320] Caches are synced for garbage collector
I0725 20:37:06.571620       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-7db6d8ff4d" duration="74.335µs"
I0725 20:37:07.612888       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-7db6d8ff4d" duration="12.707377ms"
I0725 20:37:07.613085       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-7db6d8ff4d" duration="80.082µs"
I0725 20:37:24.437212       1 endpointslice_controller.go:311] "Error syncing endpoint slices for service, retrying" logger="endpointslice-controller" key="default/story-service" err="EndpointSlice informer cache is out of date"
I0725 20:37:24.441134       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/story-deployment-77df64df55" duration="122.604293ms"
I0725 20:37:24.471505       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/story-deployment-77df64df55" duration="28.543929ms"
I0725 20:37:24.473400       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/story-deployment-77df64df55" duration="1.743051ms"
I0725 20:37:24.475064       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/story-deployment-77df64df55" duration="135.571µs"


==> kube-proxy [ef020f439908] <==
I0725 20:37:05.332655       1 server_linux.go:69] "Using iptables proxy"
I0725 20:37:05.357913       1 server.go:1062] "Successfully retrieved node IP(s)" IPs=["192.168.49.2"]
I0725 20:37:05.405872       1 server.go:659] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0725 20:37:05.405966       1 server_linux.go:165] "Using iptables Proxier"
I0725 20:37:05.410104       1 server_linux.go:511] "Detect-local-mode set to ClusterCIDR, but no cluster CIDR for family" ipFamily="IPv6"
I0725 20:37:05.410149       1 server_linux.go:528] "Defaulting to no-op detect-local"
I0725 20:37:05.410189       1 proxier.go:243] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0725 20:37:05.410746       1 server.go:872] "Version info" version="v1.30.0"
I0725 20:37:05.410824       1 server.go:874] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0725 20:37:05.417082       1 config.go:192] "Starting service config controller"
I0725 20:37:05.417238       1 shared_informer.go:313] Waiting for caches to sync for service config
I0725 20:37:05.417606       1 config.go:101] "Starting endpoint slice config controller"
I0725 20:37:05.417637       1 shared_informer.go:313] Waiting for caches to sync for endpoint slice config
I0725 20:37:05.420086       1 config.go:319] "Starting node config controller"
I0725 20:37:05.420127       1 shared_informer.go:313] Waiting for caches to sync for node config
I0725 20:37:05.519475       1 shared_informer.go:320] Caches are synced for endpoint slice config
I0725 20:37:05.519587       1 shared_informer.go:320] Caches are synced for service config
I0725 20:37:05.520475       1 shared_informer.go:320] Caches are synced for node config


==> kube-scheduler [5adff3108ac4] <==
I0725 20:36:45.059702       1 serving.go:380] Generated self-signed cert in-memory
W0725 20:36:48.084576       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0725 20:36:48.084622       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0725 20:36:48.084638       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W0725 20:36:48.084654       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0725 20:36:48.106179       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.30.0"
I0725 20:36:48.106219       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0725 20:36:48.110067       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0725 20:36:48.110138       1 shared_informer.go:313] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0725 20:36:48.110251       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I0725 20:36:48.110861       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0725 20:36:48.119877       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0725 20:36:48.119994       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0725 20:36:48.120233       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0725 20:36:48.120285       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0725 20:36:48.120565       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0725 20:36:48.120638       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0725 20:36:48.121433       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0725 20:36:48.121497       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0725 20:36:48.124280       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0725 20:36:48.124377       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0725 20:36:48.124421       1 reflector.go:547] runtime/asm_amd64.s:1695: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0725 20:36:48.124469       1 reflector.go:150] runtime/asm_amd64.s:1695: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0725 20:36:48.124919       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0725 20:36:48.125335       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0725 20:36:48.125378       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0725 20:36:48.125687       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0725 20:36:48.125694       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0725 20:36:48.125197       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0725 20:36:48.125768       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0725 20:36:48.125202       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0725 20:36:48.125846       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0725 20:36:48.125441       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0725 20:36:48.125914       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0725 20:36:48.125447       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0725 20:36:48.126077       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0725 20:36:48.125120       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0725 20:36:48.126119       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0725 20:36:48.125632       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0725 20:36:48.126199       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0725 20:36:48.125734       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0725 20:36:49.338527       1 reflector.go:547] runtime/asm_amd64.s:1695: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0725 20:36:49.338608       1 reflector.go:150] runtime/asm_amd64.s:1695: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
I0725 20:36:51.011101       1 shared_informer.go:320] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file


==> kubelet <==
Jul 25 20:36:50 minikube kubelet[2167]: I0725 20:36:50.996480    2167 cpu_manager.go:214] "Starting CPU manager" policy="none"
Jul 25 20:36:50 minikube kubelet[2167]: I0725 20:36:50.996522    2167 cpu_manager.go:215] "Reconciling" reconcilePeriod="10s"
Jul 25 20:36:50 minikube kubelet[2167]: I0725 20:36:50.996577    2167 state_mem.go:36] "Initialized new in-memory state store"
Jul 25 20:36:50 minikube kubelet[2167]: I0725 20:36:50.997163    2167 state_mem.go:88] "Updated default CPUSet" cpuSet=""
Jul 25 20:36:50 minikube kubelet[2167]: I0725 20:36:50.997204    2167 state_mem.go:96] "Updated CPUSet assignments" assignments={}
Jul 25 20:36:50 minikube kubelet[2167]: I0725 20:36:50.997266    2167 policy_none.go:49] "None policy: Start"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.002840    2167 memory_manager.go:170] "Starting memorymanager" policy="None"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.002917    2167 state_mem.go:35] "Initializing new in-memory state store"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.003329    2167 state_mem.go:75] "Updated machine memory state"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.014688    2167 manager.go:479] "Failed to read data from checkpoint" checkpoint="kubelet_internal_checkpoint" err="checkpoint is not found"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.015039    2167 container_log_manager.go:186] "Initializing container log rotate workers" workers=1 monitorPeriod="10s"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.015701    2167 plugin_manager.go:118] "Starting Kubelet Plugin Manager"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.017753    2167 kubelet_node_status.go:497] "Fast updating node status as it just became ready"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.137184    2167 topology_manager.go:215] "Topology Admit Handler" podUID="063d6b9688927e601f52fd818d1305c5" podNamespace="kube-system" podName="etcd-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.137598    2167 topology_manager.go:215] "Topology Admit Handler" podUID="3c555f828409b009ebee39fdbedfcac0" podNamespace="kube-system" podName="kube-apiserver-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.137803    2167 topology_manager.go:215] "Topology Admit Handler" podUID="7fd44e8d11c3e0ffe6b1825e2a1f2270" podNamespace="kube-system" podName="kube-controller-manager-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.137921    2167 topology_manager.go:215] "Topology Admit Handler" podUID="f9c8e1d0d74b1727abdb4b4a31d3a7c1" podNamespace="kube-system" podName="kube-scheduler-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: E0725 20:36:51.161192    2167 kubelet.go:1928] "Failed creating a mirror pod for" err="pods \"kube-controller-manager-minikube\" already exists" pod="kube-system/kube-controller-manager-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.198282    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/7fd44e8d11c3e0ffe6b1825e2a1f2270-flexvolume-dir\") pod \"kube-controller-manager-minikube\" (UID: \"7fd44e8d11c3e0ffe6b1825e2a1f2270\") " pod="kube-system/kube-controller-manager-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.198443    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/f9c8e1d0d74b1727abdb4b4a31d3a7c1-kubeconfig\") pod \"kube-scheduler-minikube\" (UID: \"f9c8e1d0d74b1727abdb4b4a31d3a7c1\") " pod="kube-system/kube-scheduler-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.198517    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/7fd44e8d11c3e0ffe6b1825e2a1f2270-ca-certs\") pod \"kube-controller-manager-minikube\" (UID: \"7fd44e8d11c3e0ffe6b1825e2a1f2270\") " pod="kube-system/kube-controller-manager-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.198585    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/3c555f828409b009ebee39fdbedfcac0-k8s-certs\") pod \"kube-apiserver-minikube\" (UID: \"3c555f828409b009ebee39fdbedfcac0\") " pod="kube-system/kube-apiserver-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.198754    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/3c555f828409b009ebee39fdbedfcac0-usr-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"3c555f828409b009ebee39fdbedfcac0\") " pod="kube-system/kube-apiserver-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.198821    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/7fd44e8d11c3e0ffe6b1825e2a1f2270-etc-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"7fd44e8d11c3e0ffe6b1825e2a1f2270\") " pod="kube-system/kube-controller-manager-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.198897    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/7fd44e8d11c3e0ffe6b1825e2a1f2270-k8s-certs\") pod \"kube-controller-manager-minikube\" (UID: \"7fd44e8d11c3e0ffe6b1825e2a1f2270\") " pod="kube-system/kube-controller-manager-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.199004    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/3c555f828409b009ebee39fdbedfcac0-etc-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"3c555f828409b009ebee39fdbedfcac0\") " pod="kube-system/kube-apiserver-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.199063    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/063d6b9688927e601f52fd818d1305c5-etcd-data\") pod \"etcd-minikube\" (UID: \"063d6b9688927e601f52fd818d1305c5\") " pod="kube-system/etcd-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.199138    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/3c555f828409b009ebee39fdbedfcac0-ca-certs\") pod \"kube-apiserver-minikube\" (UID: \"3c555f828409b009ebee39fdbedfcac0\") " pod="kube-system/kube-apiserver-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.199211    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/3c555f828409b009ebee39fdbedfcac0-usr-local-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"3c555f828409b009ebee39fdbedfcac0\") " pod="kube-system/kube-apiserver-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.199272    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/7fd44e8d11c3e0ffe6b1825e2a1f2270-kubeconfig\") pod \"kube-controller-manager-minikube\" (UID: \"7fd44e8d11c3e0ffe6b1825e2a1f2270\") " pod="kube-system/kube-controller-manager-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.199329    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/7fd44e8d11c3e0ffe6b1825e2a1f2270-usr-local-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"7fd44e8d11c3e0ffe6b1825e2a1f2270\") " pod="kube-system/kube-controller-manager-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.199489    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/063d6b9688927e601f52fd818d1305c5-etcd-certs\") pod \"etcd-minikube\" (UID: \"063d6b9688927e601f52fd818d1305c5\") " pod="kube-system/etcd-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.199634    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/7fd44e8d11c3e0ffe6b1825e2a1f2270-usr-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"7fd44e8d11c3e0ffe6b1825e2a1f2270\") " pod="kube-system/kube-controller-manager-minikube"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.777104    2167 apiserver.go:52] "Watching apiserver"
Jul 25 20:36:51 minikube kubelet[2167]: I0725 20:36:51.917449    2167 desired_state_of_world_populator.go:157] "Finished populating initial desired state of world"
Jul 25 20:36:52 minikube kubelet[2167]: E0725 20:36:52.082982    2167 kubelet.go:1928] "Failed creating a mirror pod for" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
Jul 25 20:36:52 minikube kubelet[2167]: E0725 20:36:52.085503    2167 kubelet.go:1928] "Failed creating a mirror pod for" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
Jul 25 20:36:52 minikube kubelet[2167]: E0725 20:36:52.087448    2167 kubelet.go:1928] "Failed creating a mirror pod for" err="pods \"kube-controller-manager-minikube\" already exists" pod="kube-system/kube-controller-manager-minikube"
Jul 25 20:36:52 minikube kubelet[2167]: I0725 20:36:52.161635    2167 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-apiserver-minikube" podStartSLOduration=1.161597274 podStartE2EDuration="1.161597274s" podCreationTimestamp="2024-07-25 20:36:51 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-25 20:36:52.155674036 +0000 UTC m=+1.540357722" watchObservedRunningTime="2024-07-25 20:36:52.161597274 +0000 UTC m=+1.546280950"
Jul 25 20:36:52 minikube kubelet[2167]: I0725 20:36:52.162074    2167 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/etcd-minikube" podStartSLOduration=1.16205248 podStartE2EDuration="1.16205248s" podCreationTimestamp="2024-07-25 20:36:51 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-25 20:36:52.124316876 +0000 UTC m=+1.509000529" watchObservedRunningTime="2024-07-25 20:36:52.16205248 +0000 UTC m=+1.546736136"
Jul 25 20:36:52 minikube kubelet[2167]: I0725 20:36:52.241853    2167 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-controller-manager-minikube" podStartSLOduration=4.241812982 podStartE2EDuration="4.241812982s" podCreationTimestamp="2024-07-25 20:36:48 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-25 20:36:52.207006797 +0000 UTC m=+1.591690448" watchObservedRunningTime="2024-07-25 20:36:52.241812982 +0000 UTC m=+1.626496683"
Jul 25 20:36:52 minikube kubelet[2167]: I0725 20:36:52.314998    2167 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-scheduler-minikube" podStartSLOduration=1.314906458 podStartE2EDuration="1.314906458s" podCreationTimestamp="2024-07-25 20:36:51 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-25 20:36:52.258238016 +0000 UTC m=+1.642921707" watchObservedRunningTime="2024-07-25 20:36:52.314906458 +0000 UTC m=+1.699590098"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.257112    2167 topology_manager.go:215] "Topology Admit Handler" podUID="e032ea78-e0c0-48bf-add2-222f3b905b00" podNamespace="kube-system" podName="storage-provisioner"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.299708    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"tmp\" (UniqueName: \"kubernetes.io/host-path/e032ea78-e0c0-48bf-add2-222f3b905b00-tmp\") pod \"storage-provisioner\" (UID: \"e032ea78-e0c0-48bf-add2-222f3b905b00\") " pod="kube-system/storage-provisioner"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.299818    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-c4rcn\" (UniqueName: \"kubernetes.io/projected/e032ea78-e0c0-48bf-add2-222f3b905b00-kube-api-access-c4rcn\") pod \"storage-provisioner\" (UID: \"e032ea78-e0c0-48bf-add2-222f3b905b00\") " pod="kube-system/storage-provisioner"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.358259    2167 topology_manager.go:215] "Topology Admit Handler" podUID="01cf83d5-5a19-4dfa-be85-ae7746ea6e7c" podNamespace="kube-system" podName="kube-proxy-ppxvq"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.400799    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/01cf83d5-5a19-4dfa-be85-ae7746ea6e7c-xtables-lock\") pod \"kube-proxy-ppxvq\" (UID: \"01cf83d5-5a19-4dfa-be85-ae7746ea6e7c\") " pod="kube-system/kube-proxy-ppxvq"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.400940    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/01cf83d5-5a19-4dfa-be85-ae7746ea6e7c-lib-modules\") pod \"kube-proxy-ppxvq\" (UID: \"01cf83d5-5a19-4dfa-be85-ae7746ea6e7c\") " pod="kube-system/kube-proxy-ppxvq"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.401017    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/01cf83d5-5a19-4dfa-be85-ae7746ea6e7c-kube-proxy\") pod \"kube-proxy-ppxvq\" (UID: \"01cf83d5-5a19-4dfa-be85-ae7746ea6e7c\") " pod="kube-system/kube-proxy-ppxvq"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.401114    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-zlmgh\" (UniqueName: \"kubernetes.io/projected/01cf83d5-5a19-4dfa-be85-ae7746ea6e7c-kube-api-access-zlmgh\") pod \"kube-proxy-ppxvq\" (UID: \"01cf83d5-5a19-4dfa-be85-ae7746ea6e7c\") " pod="kube-system/kube-proxy-ppxvq"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.675445    2167 topology_manager.go:215] "Topology Admit Handler" podUID="0b73445c-0c67-4c5f-9618-59fa7d9dd534" podNamespace="kube-system" podName="coredns-7db6d8ff4d-vdnw5"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.705691    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-q9qqd\" (UniqueName: \"kubernetes.io/projected/0b73445c-0c67-4c5f-9618-59fa7d9dd534-kube-api-access-q9qqd\") pod \"coredns-7db6d8ff4d-vdnw5\" (UID: \"0b73445c-0c67-4c5f-9618-59fa7d9dd534\") " pod="kube-system/coredns-7db6d8ff4d-vdnw5"
Jul 25 20:37:04 minikube kubelet[2167]: I0725 20:37:04.705799    2167 reconciler_common.go:247] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/0b73445c-0c67-4c5f-9618-59fa7d9dd534-config-volume\") pod \"coredns-7db6d8ff4d-vdnw5\" (UID: \"0b73445c-0c67-4c5f-9618-59fa7d9dd534\") " pod="kube-system/coredns-7db6d8ff4d-vdnw5"
Jul 25 20:37:05 minikube kubelet[2167]: I0725 20:37:05.470901    2167 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="35e736fe62d79231585ff1e82a068b1b3243aa9e26fef5e1ee0e7bf305b1a70c"
Jul 25 20:37:05 minikube kubelet[2167]: I0725 20:37:05.553156    2167 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=12.553115771 podStartE2EDuration="12.553115771s" podCreationTimestamp="2024-07-25 20:36:53 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-25 20:37:05.552442714 +0000 UTC m=+14.936762758" watchObservedRunningTime="2024-07-25 20:37:05.553115771 +0000 UTC m=+14.937435805"
Jul 25 20:37:05 minikube kubelet[2167]: I0725 20:37:05.554972    2167 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-proxy-ppxvq" podStartSLOduration=1.554936076 podStartE2EDuration="1.554936076s" podCreationTimestamp="2024-07-25 20:37:04 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-25 20:37:05.517795469 +0000 UTC m=+14.902115513" watchObservedRunningTime="2024-07-25 20:37:05.554936076 +0000 UTC m=+14.939256138"
Jul 25 20:37:07 minikube kubelet[2167]: I0725 20:37:07.599633    2167 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-7db6d8ff4d-vdnw5" podStartSLOduration=3.599602876 podStartE2EDuration="3.599602876s" podCreationTimestamp="2024-07-25 20:37:04 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-25 20:37:06.574531339 +0000 UTC m=+15.958851460" watchObservedRunningTime="2024-07-25 20:37:07.599602876 +0000 UTC m=+16.983922892"
Jul 25 20:37:11 minikube kubelet[2167]: I0725 20:37:11.441756    2167 kuberuntime_manager.go:1523] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
Jul 25 20:37:11 minikube kubelet[2167]: I0725 20:37:11.442962    2167 kubelet_network.go:61] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
Jul 25 20:37:35 minikube kubelet[2167]: I0725 20:37:35.954588    2167 scope.go:117] "RemoveContainer" containerID="5601f6e474686f02c0e79fff799e2fb23aa7cfe8a2cc27f5f91faec9ddcbb3ca"


==> storage-provisioner [544b8972c60e] <==
I0725 20:37:36.166647       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0725 20:37:36.184067       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0725 20:37:36.184177       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0725 20:37:36.208423       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0725 20:37:36.209098       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"0b108ba6-d824-4b96-b8e2-c0c3e7ba5f59", APIVersion:"v1", ResourceVersion:"414", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_73a52da9-5c4d-4bde-bd1e-4cde6d9b197a became leader
I0725 20:37:36.210840       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_73a52da9-5c4d-4bde-bd1e-4cde6d9b197a!
I0725 20:37:36.312105       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_73a52da9-5c4d-4bde-bd1e-4cde6d9b197a!


==> storage-provisioner [5601f6e47468] <==
I0725 20:37:05.229071       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0725 20:37:35.234194       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": dial tcp 10.96.0.1:443: i/o timeout

